plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

application {
    mainClassName = 'com.carousal.client.MainKt'
}

launch4j {
    mainClassName = 'com.carousal.client.MainKt'
    icon = "${projectDir}/resources/carousal256.ico"
    outfile = "Carousal.exe"
    downloadUrl = "https://github.com/AkashWorld/carousal"
    copyright = "GPL3"
    jreMinVersion = "1.11"
    windowTitle = "Carousal"
    jvmOptions = ['--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
    ]
}

startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
    }
}

javafx {
    version = "13"
    modules = ['javafx.controls', 'javafx.base', 'javafx.graphics']
}

group 'akashworld'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://4thline.org/m2"
    }
}

dependencies {
    compile 'io.javalin:javalin:3.6.0'
    compile 'com.graphql-java:graphql-java:13.0'
    compile 'org.slf4j:slf4j-api:1.7.29'
    compile 'org.slf4j:slf4j-simple:1.7.29'
    compile "org.jetbrains.kotlin:kotlin-reflect:1.3.41"
    compile "com.fasterxml.jackson.core:jackson-databind:2.10.0"
    compile 'no.tornado:tornadofx:1.7.19'
    compile 'com.vdurmont:emoji-java:5.1.1'
    compile 'de.codecentric.centerdevice:javafxsvg:1.3.0'
    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-9'
    compile 'org.fourthline.cling:cling-core:2.1.2'
    compile 'org.fourthline.cling:cling-support:2.1.2'
    compile 'com.offbynull.portmapper:portmapper:2.0.5'
    compile 'org.imgscalr:imgscalr-lib:4.2'
    compile 'com.jfoenix:jfoenix:9.0.8'
    implementation "com.google.guava:guava:28.2-jre"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.auth0:java-jwt:3.8.3'
    implementation "com.squareup.okhttp3:okhttp:4.2.1"
    implementation "uk.co.caprica:vlcj:4.2.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    implementation 'me.xdrop:fuzzywuzzy:1.2.0'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.2"
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

run {
    applicationDefaultJvmArgs = ['--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED',
                                 '--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED',
                                 '--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
                                 '--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
    ]

    jvmArgs = ['--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
               '--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED',
    ]
}